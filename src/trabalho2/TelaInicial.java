package trabalho2;

import java.util.ArrayList;

/**
 *
 * @author Douglas, Patricia, Priscila
 */
public class TelaInicial extends javax.swing.JFrame {

    private Conexao conexao;

    /**
     * Creates new form TelaInicial
     */
    public TelaInicial() {
        initComponents();
        conexao = new Conexao();
        conexao.agentes();
        inicializaComboIpsDestino(conexao.getListaAgentes());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtftempo = new javax.swing.JTextField();
        jbget = new javax.swing.JButton();
        jcbMetrica = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jtfIP = new javax.swing.JTextField();
        jtfComunidade = new javax.swing.JTextField();
        jcbIps = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SNMP");

        jLabel2.setText("Comunidade");

        jLabel4.setText("Período de atualização");

        jbget.setText("OK");
        jbget.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbgetActionPerformed(evt);
            }
        });

        jcbMetrica.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione item", "Utilizacao do link", "Datagramas IP", "Pacotes TCP", "Pacotes UDP", "Pacotes SNMP" }));

        jLabel5.setText("Métrica ");

        jLabel1.setText("IP");

        jcbIps.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jcbIps, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jtfIP, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                            .addGap(18, 18, 18)
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jtfComunidade))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jcbMetrica, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jtftempo, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jbget, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jtfComunidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbIps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jcbMetrica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jtftempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jbget)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbgetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbgetActionPerformed
        //jtaresultado.setText("");
        int resultadoIn = -1;
        int resultadoOut = -1;
        int tempo = -1;
        String ip = "";

        if (jcbIps.getSelectedItem().toString().equals("Selecione IP")
                && jtfIP.getText().equals("")) {
            System.out.println("Selecione ou digite um IP");
        } else if (jcbMetrica.getSelectedItem().toString().equals("Selecione item")) {
            System.out.println("Selecione uma metrica");
        } else if (true) {
            //validar se campo jtftempo.getText() eh numero
        } else {
            if (!jtftempo.getText().equals("")) {
                tempo = Integer.parseInt(jtftempo.getText());
            } else if (jcbMetrica.getSelectedItem().toString().equals("Utilizacao do link")) {
                String ifInOctes = conexao.get(jtfIP.getText(), jtfComunidade.getText(), ".1.3.6.1.2.1.2.2.1.10.");
                String ifOutOctes = conexao.get(jtfIP.getText(), jtfComunidade.getText(), ".1.3.6.1.2.1.2.2.1.16");
                String ifSpeed = conexao.get(jtfIP.getText(), jtfComunidade.getText(), ".1.3.6.1.2.1.2.2.1.5");

                //jtaresultado.setText("IfInOctes" + ifInOctes + "\n");
                //jtaresultado.setText("IfOutOctes" + ifOutOctes + "\n");
                //jtaresultado.setText("IfSpeed" + ifSpeed + "\n");
            } else if (jcbMetrica.getSelectedItem().toString().equals("Datagramas IP")) {
                resultadoIn = Integer.parseInt(conexao.get(jtfIP.getText(), jtfComunidade.getText(), ".1.3.6.1.2.1.4.3.0"));
                resultadoOut = Integer.parseInt(conexao.get(jtfIP.getText(), jtfComunidade.getText(), ".1.3.6.1.2.1.4.10.0"));
            } else if (jcbMetrica.getSelectedItem().toString().equals("Pacotes TCP")) {
                resultadoIn = Integer.parseInt(conexao.get(jtfIP.getText(), jtfComunidade.getText(), ".1.3.6.1.2.1.6.10.0"));
                resultadoOut = Integer.parseInt(conexao.get(jtfIP.getText(), jtfComunidade.getText(), ".1.3.6.1.2.1.6.11.0"));
            } else if (jcbMetrica.getSelectedItem().toString().equals("Pacotes UDP")) {
                resultadoIn = Integer.parseInt(conexao.get(jtfIP.getText(), jtfComunidade.getText(), ".1.3.6.1.2.1.7.1.0"));
                resultadoOut = Integer.parseInt(conexao.get(jtfIP.getText(), jtfComunidade.getText(), ".1.3.6.1.2.1.7.4.0"));
            } else if (jcbMetrica.getSelectedItem().toString().equals("Pacotes SNMP")) {
                resultadoIn = Integer.parseInt(conexao.get(jtfIP.getText(), jtfComunidade.getText(), ".1.3.6.1.2.1.11.1.0"));
                resultadoOut = Integer.parseInt(conexao.get(jtfIP.getText(), jtfComunidade.getText(), ".1.3.6.1.2.1.11.2.0"));
            }
            //jtaresultado.setText(resultadoIn + "\n" + resultadoOut);
            conexao.atualizaGrafico(jcbMetrica.getSelectedItem().toString(), tempo, resultadoIn, tempo, resultadoOut);
        }
    }//GEN-LAST:event_jbgetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaInicial().setVisible(true);
            }
        });
    }

    public void inicializaComboIpsDestino(ArrayList<String> ips) {
        jcbIps.removeAllItems();
        jcbIps.addItem("Selecione IP");
        for (int i = 0; i < ips.size(); i++) {
            jcbIps.addItem(ips.get(i));
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton jbget;
    private javax.swing.JComboBox jcbIps;
    private javax.swing.JComboBox jcbMetrica;
    private javax.swing.JTextField jtfComunidade;
    private javax.swing.JTextField jtfIP;
    private javax.swing.JTextField jtftempo;
    // End of variables declaration//GEN-END:variables

}
